<?php

/**
 * @file
 * Tests for styletags_filter module.
 */

/**
 * Class StyletagsFilterWebTestCase.
 */
class StyletagsFilterWebTestCase extends DrupalWebTestCase {

  /**
   * Defines admin user object.
   *
   * @var object
   */
  protected $adminUser;

  /**
   * Format machine name.
   *
   * @var string
   */
  protected $formatId;

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return [
      'name' => 'Styletags Filter replacement',
      'description' => 'Tests styletags_filter functionality',
      'group' => 'Styletags Filter',
    ];
  }

  /**
   * {@inheritdoc}
   */
  protected function setUp() {
    parent::setUp('libraries', 'styletags_filter');

    $this->adminUser = $this->drupalCreateUser(array(
      'administer modules',
      'administer filters',
      'administer site configuration',
    ));
    $this->drupalLogin($this->adminUser);

    $this->formatId = $this->createFormat(array('styletags_filter'), $this->adminUser);
  }

  /**
   * Test filtering.
   */
  public function testFilter() {
    $htmlFixture = '
    <style>
      .myclass {
          font-weight: bold;
      }
    </style>
      
    <span class="myclass">
      some bold text
    </span>
    ';

    $expected = '
    <strong>
      some bold text
    </strong>';

    $actual = check_markup($htmlFixture, $this->formatId);
    $this->assertEqual(trim($expected), trim($actual));
  }

  /**
   * Create a format and optionally assign roles from provided account.
   *
   * @param object $account
   *   Optional user account to use for a source of roles to assign.
   *
   * @return string
   *   Format machine name.
   */
  protected function createFormat($filters = array(), $account = NULL) {
    // Add a text format.
    $name = $this->randomName();
    $edit = array();
    $edit['format'] = drupal_strtolower($name);
    $edit['name'] = $name;

    $roles = array(DRUPAL_ANONYMOUS_RID);
    $roles = $account ? array_merge($roles, array_keys($account->roles)) : $roles;
    foreach ($roles as $role) {
      $edit['roles[' . $role . ']'] = 1;
    }

    foreach ($filters as $filter) {
      // Enable the styletags_filter filter.
      $edit['filters[' . $filter . '][status]'] = 1;
    }

    $this->drupalPost('admin/config/content/formats/add', $edit, t('Save configuration'));
    $this->assertRaw(t('Added text format %format.', array('%format' => $name)), 'New format created.');

    drupal_static_reset('filter_formats');

    return $edit['format'];
  }

}
